/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package at.grabner.circleprogress.test;

public final class R {
  public static final class attr {
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_autoTextColor=0x7f010000;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_autoTextSize=0x7f010001;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_barColor=0x7f010002;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_barColor1=0x7f010003;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_barColor2=0x7f010004;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_barColor3=0x7f010005;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Both</td><td>3</td><td></td></tr>
     * <tr><td>End</td><td>2</td><td></td></tr>
     * <tr><td>None</td><td>0</td><td></td></tr>
     * <tr><td>Start</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int cpv_barStartEndLine=0x7f010006;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_barStartEndLineColor=0x7f010007;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_barStartEndLineSweep=0x7f010008;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_barStartEndLineWidth=0x7f010009;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Butt</td><td>0</td><td></td></tr>
     * <tr><td>Round</td><td>1</td><td></td></tr>
     * <tr><td>Square</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int cpv_barStrokeCap=0x7f01000a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_barWidth=0x7f01000b;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int cpv_blockCount=0x7f01000c;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_blockScale=0x7f01000d;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int cpv_decimalFormat=0x7f01000e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>CCW</td><td>1</td><td></td></tr>
     * <tr><td>CW</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cpv_direction=0x7f01000f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_fillColor=0x7f010010;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_innerContourColor=0x7f010011;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_innerContourSize=0x7f010012;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_maxValue=0x7f010013;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_maxValueAllowed=0x7f010014;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_minValueAllowed=0x7f010015;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_outerContourColor=0x7f010016;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_outerContourSize=0x7f010017;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_rimColor=0x7f010018;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_rimWidth=0x7f010019;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_roundToBlock=0x7f01001a;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_roundToWholeNumber=0x7f01001b;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_seekMode=0x7f01001c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_showTextInSpinningMode=0x7f01001d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_showUnit=0x7f01001e;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cpv_spin=0x7f01001f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_spinBarLength=0x7f010020;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_spinColor=0x7f010021;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_spinSpeed=0x7f010022;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int cpv_startAngle=0x7f010023;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int cpv_text=0x7f010024;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_textColor=0x7f010025;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Percent</td><td>1</td><td></td></tr>
     * <tr><td>Text</td><td>0</td><td></td></tr>
     * <tr><td>Value</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int cpv_textMode=0x7f010026;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_textScale=0x7f010027;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_textSize=0x7f010028;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int cpv_textTypeface=0x7f010029;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int cpv_unit=0x7f01002a;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cpv_unitColor=0x7f01002b;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>left_bottom</td><td>4</td><td></td></tr>
     * <tr><td>left_top</td><td>2</td><td></td></tr>
     * <tr><td>right_bottom</td><td>5</td><td></td></tr>
     * <tr><td>right_top</td><td>3</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int cpv_unitPosition=0x7f01002c;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_unitScale=0x7f01002d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cpv_unitSize=0x7f01002e;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_unitToTextScale=0x7f01002f;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int cpv_unitTypeface=0x7f010030;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int cpv_value=0x7f010031;
  }
  public static final class id {
    public static final int Both=0x7f020000;
    public static final int Butt=0x7f020001;
    public static final int CCW=0x7f020002;
    public static final int CW=0x7f020003;
    public static final int End=0x7f020004;
    public static final int None=0x7f020005;
    public static final int Percent=0x7f020006;
    public static final int Round=0x7f020007;
    public static final int Square=0x7f020008;
    public static final int Start=0x7f020009;
    public static final int Text=0x7f02000a;
    public static final int Value=0x7f02000b;
    public static final int bottom=0x7f02000c;
    public static final int left_bottom=0x7f02000d;
    public static final int left_top=0x7f02000e;
    public static final int right_bottom=0x7f02000f;
    public static final int right_top=0x7f020010;
    public static final int top=0x7f020011;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a CircleProgressView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_autoTextColor at.grabner.circleprogress.test:cpv_autoTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_autoTextSize at.grabner.circleprogress.test:cpv_autoTextSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_barColor at.grabner.circleprogress.test:cpv_barColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_barColor1 at.grabner.circleprogress.test:cpv_barColor1}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_barColor2 at.grabner.circleprogress.test:cpv_barColor2}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_barColor3 at.grabner.circleprogress.test:cpv_barColor3}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_barStartEndLine at.grabner.circleprogress.test:cpv_barStartEndLine}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_barStartEndLineColor at.grabner.circleprogress.test:cpv_barStartEndLineColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_barStartEndLineSweep at.grabner.circleprogress.test:cpv_barStartEndLineSweep}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_barStartEndLineWidth at.grabner.circleprogress.test:cpv_barStartEndLineWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_barStrokeCap at.grabner.circleprogress.test:cpv_barStrokeCap}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_barWidth at.grabner.circleprogress.test:cpv_barWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_blockCount at.grabner.circleprogress.test:cpv_blockCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_blockScale at.grabner.circleprogress.test:cpv_blockScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_decimalFormat at.grabner.circleprogress.test:cpv_decimalFormat}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_direction at.grabner.circleprogress.test:cpv_direction}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_fillColor at.grabner.circleprogress.test:cpv_fillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_innerContourColor at.grabner.circleprogress.test:cpv_innerContourColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_innerContourSize at.grabner.circleprogress.test:cpv_innerContourSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_maxValue at.grabner.circleprogress.test:cpv_maxValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_maxValueAllowed at.grabner.circleprogress.test:cpv_maxValueAllowed}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_minValueAllowed at.grabner.circleprogress.test:cpv_minValueAllowed}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_outerContourColor at.grabner.circleprogress.test:cpv_outerContourColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_outerContourSize at.grabner.circleprogress.test:cpv_outerContourSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_rimColor at.grabner.circleprogress.test:cpv_rimColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_rimWidth at.grabner.circleprogress.test:cpv_rimWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_roundToBlock at.grabner.circleprogress.test:cpv_roundToBlock}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_roundToWholeNumber at.grabner.circleprogress.test:cpv_roundToWholeNumber}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_seekMode at.grabner.circleprogress.test:cpv_seekMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_showTextInSpinningMode at.grabner.circleprogress.test:cpv_showTextInSpinningMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_showUnit at.grabner.circleprogress.test:cpv_showUnit}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_spin at.grabner.circleprogress.test:cpv_spin}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_spinBarLength at.grabner.circleprogress.test:cpv_spinBarLength}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_spinColor at.grabner.circleprogress.test:cpv_spinColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_spinSpeed at.grabner.circleprogress.test:cpv_spinSpeed}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_startAngle at.grabner.circleprogress.test:cpv_startAngle}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_text at.grabner.circleprogress.test:cpv_text}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_textColor at.grabner.circleprogress.test:cpv_textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_textMode at.grabner.circleprogress.test:cpv_textMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_textScale at.grabner.circleprogress.test:cpv_textScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_textSize at.grabner.circleprogress.test:cpv_textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_textTypeface at.grabner.circleprogress.test:cpv_textTypeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_unit at.grabner.circleprogress.test:cpv_unit}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_unitColor at.grabner.circleprogress.test:cpv_unitColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_unitPosition at.grabner.circleprogress.test:cpv_unitPosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_unitScale at.grabner.circleprogress.test:cpv_unitScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_unitSize at.grabner.circleprogress.test:cpv_unitSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_unitToTextScale at.grabner.circleprogress.test:cpv_unitToTextScale}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_unitTypeface at.grabner.circleprogress.test:cpv_unitTypeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleProgressView_cpv_value at.grabner.circleprogress.test:cpv_value}</code></td><td></td></tr>
     * </table>
     * @see #CircleProgressView_cpv_autoTextColor
     * @see #CircleProgressView_cpv_autoTextSize
     * @see #CircleProgressView_cpv_barColor
     * @see #CircleProgressView_cpv_barColor1
     * @see #CircleProgressView_cpv_barColor2
     * @see #CircleProgressView_cpv_barColor3
     * @see #CircleProgressView_cpv_barStartEndLine
     * @see #CircleProgressView_cpv_barStartEndLineColor
     * @see #CircleProgressView_cpv_barStartEndLineSweep
     * @see #CircleProgressView_cpv_barStartEndLineWidth
     * @see #CircleProgressView_cpv_barStrokeCap
     * @see #CircleProgressView_cpv_barWidth
     * @see #CircleProgressView_cpv_blockCount
     * @see #CircleProgressView_cpv_blockScale
     * @see #CircleProgressView_cpv_decimalFormat
     * @see #CircleProgressView_cpv_direction
     * @see #CircleProgressView_cpv_fillColor
     * @see #CircleProgressView_cpv_innerContourColor
     * @see #CircleProgressView_cpv_innerContourSize
     * @see #CircleProgressView_cpv_maxValue
     * @see #CircleProgressView_cpv_maxValueAllowed
     * @see #CircleProgressView_cpv_minValueAllowed
     * @see #CircleProgressView_cpv_outerContourColor
     * @see #CircleProgressView_cpv_outerContourSize
     * @see #CircleProgressView_cpv_rimColor
     * @see #CircleProgressView_cpv_rimWidth
     * @see #CircleProgressView_cpv_roundToBlock
     * @see #CircleProgressView_cpv_roundToWholeNumber
     * @see #CircleProgressView_cpv_seekMode
     * @see #CircleProgressView_cpv_showTextInSpinningMode
     * @see #CircleProgressView_cpv_showUnit
     * @see #CircleProgressView_cpv_spin
     * @see #CircleProgressView_cpv_spinBarLength
     * @see #CircleProgressView_cpv_spinColor
     * @see #CircleProgressView_cpv_spinSpeed
     * @see #CircleProgressView_cpv_startAngle
     * @see #CircleProgressView_cpv_text
     * @see #CircleProgressView_cpv_textColor
     * @see #CircleProgressView_cpv_textMode
     * @see #CircleProgressView_cpv_textScale
     * @see #CircleProgressView_cpv_textSize
     * @see #CircleProgressView_cpv_textTypeface
     * @see #CircleProgressView_cpv_unit
     * @see #CircleProgressView_cpv_unitColor
     * @see #CircleProgressView_cpv_unitPosition
     * @see #CircleProgressView_cpv_unitScale
     * @see #CircleProgressView_cpv_unitSize
     * @see #CircleProgressView_cpv_unitToTextScale
     * @see #CircleProgressView_cpv_unitTypeface
     * @see #CircleProgressView_cpv_value
     */
    public static final int[] CircleProgressView={
        0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003, 
        0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007, 
        0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b, 
        0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f, 
        0x7f010010, 0x7f010011, 0x7f010012, 0x7f010013, 
        0x7f010014, 0x7f010015, 0x7f010016, 0x7f010017, 
        0x7f010018, 0x7f010019, 0x7f01001a, 0x7f01001b, 
        0x7f01001c, 0x7f01001d, 0x7f01001e, 0x7f01001f, 
        0x7f010020, 0x7f010021, 0x7f010022, 0x7f010023, 
        0x7f010024, 0x7f010025, 0x7f010026, 0x7f010027, 
        0x7f010028, 0x7f010029, 0x7f01002a, 0x7f01002b, 
        0x7f01002c, 0x7f01002d, 0x7f01002e, 0x7f01002f, 
        0x7f010030, 0x7f010031
      };
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_autoTextColor}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_autoTextColor
     */
    public static final int CircleProgressView_cpv_autoTextColor=0;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_autoTextSize}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_autoTextSize
     */
    public static final int CircleProgressView_cpv_autoTextSize=1;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_barColor}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_barColor
     */
    public static final int CircleProgressView_cpv_barColor=2;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_barColor1}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_barColor1
     */
    public static final int CircleProgressView_cpv_barColor1=3;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_barColor2}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_barColor2
     */
    public static final int CircleProgressView_cpv_barColor2=4;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_barColor3}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_barColor3
     */
    public static final int CircleProgressView_cpv_barColor3=5;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_barStartEndLine}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Both</td><td>3</td><td></td></tr>
     * <tr><td>End</td><td>2</td><td></td></tr>
     * <tr><td>None</td><td>0</td><td></td></tr>
     * <tr><td>Start</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name at.grabner.circleprogress.test:cpv_barStartEndLine
     */
    public static final int CircleProgressView_cpv_barStartEndLine=6;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_barStartEndLineColor}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_barStartEndLineColor
     */
    public static final int CircleProgressView_cpv_barStartEndLineColor=7;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_barStartEndLineSweep}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_barStartEndLineSweep
     */
    public static final int CircleProgressView_cpv_barStartEndLineSweep=8;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_barStartEndLineWidth}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name at.grabner.circleprogress.test:cpv_barStartEndLineWidth
     */
    public static final int CircleProgressView_cpv_barStartEndLineWidth=9;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_barStrokeCap}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Butt</td><td>0</td><td></td></tr>
     * <tr><td>Round</td><td>1</td><td></td></tr>
     * <tr><td>Square</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name at.grabner.circleprogress.test:cpv_barStrokeCap
     */
    public static final int CircleProgressView_cpv_barStrokeCap=10;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_barWidth}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name at.grabner.circleprogress.test:cpv_barWidth
     */
    public static final int CircleProgressView_cpv_barWidth=11;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_blockCount}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_blockCount
     */
    public static final int CircleProgressView_cpv_blockCount=12;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_blockScale}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_blockScale
     */
    public static final int CircleProgressView_cpv_blockScale=13;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_decimalFormat}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name at.grabner.circleprogress.test:cpv_decimalFormat
     */
    public static final int CircleProgressView_cpv_decimalFormat=14;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_direction}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>CCW</td><td>1</td><td></td></tr>
     * <tr><td>CW</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name at.grabner.circleprogress.test:cpv_direction
     */
    public static final int CircleProgressView_cpv_direction=15;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_fillColor}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_fillColor
     */
    public static final int CircleProgressView_cpv_fillColor=16;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_innerContourColor}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_innerContourColor
     */
    public static final int CircleProgressView_cpv_innerContourColor=17;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_innerContourSize}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name at.grabner.circleprogress.test:cpv_innerContourSize
     */
    public static final int CircleProgressView_cpv_innerContourSize=18;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_maxValue}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_maxValue
     */
    public static final int CircleProgressView_cpv_maxValue=19;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_maxValueAllowed}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_maxValueAllowed
     */
    public static final int CircleProgressView_cpv_maxValueAllowed=20;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_minValueAllowed}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_minValueAllowed
     */
    public static final int CircleProgressView_cpv_minValueAllowed=21;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_outerContourColor}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_outerContourColor
     */
    public static final int CircleProgressView_cpv_outerContourColor=22;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_outerContourSize}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name at.grabner.circleprogress.test:cpv_outerContourSize
     */
    public static final int CircleProgressView_cpv_outerContourSize=23;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_rimColor}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_rimColor
     */
    public static final int CircleProgressView_cpv_rimColor=24;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_rimWidth}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name at.grabner.circleprogress.test:cpv_rimWidth
     */
    public static final int CircleProgressView_cpv_rimWidth=25;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_roundToBlock}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_roundToBlock
     */
    public static final int CircleProgressView_cpv_roundToBlock=26;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_roundToWholeNumber}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_roundToWholeNumber
     */
    public static final int CircleProgressView_cpv_roundToWholeNumber=27;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_seekMode}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_seekMode
     */
    public static final int CircleProgressView_cpv_seekMode=28;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_showTextInSpinningMode}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_showTextInSpinningMode
     */
    public static final int CircleProgressView_cpv_showTextInSpinningMode=29;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_showUnit}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_showUnit
     */
    public static final int CircleProgressView_cpv_showUnit=30;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_spin}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_spin
     */
    public static final int CircleProgressView_cpv_spin=31;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_spinBarLength}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_spinBarLength
     */
    public static final int CircleProgressView_cpv_spinBarLength=32;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_spinColor}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_spinColor
     */
    public static final int CircleProgressView_cpv_spinColor=33;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_spinSpeed}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_spinSpeed
     */
    public static final int CircleProgressView_cpv_spinSpeed=34;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_startAngle}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_startAngle
     */
    public static final int CircleProgressView_cpv_startAngle=35;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_text}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name at.grabner.circleprogress.test:cpv_text
     */
    public static final int CircleProgressView_cpv_text=36;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_textColor}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_textColor
     */
    public static final int CircleProgressView_cpv_textColor=37;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_textMode}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>Percent</td><td>1</td><td></td></tr>
     * <tr><td>Text</td><td>0</td><td></td></tr>
     * <tr><td>Value</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name at.grabner.circleprogress.test:cpv_textMode
     */
    public static final int CircleProgressView_cpv_textMode=38;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_textScale}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_textScale
     */
    public static final int CircleProgressView_cpv_textScale=39;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_textSize}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name at.grabner.circleprogress.test:cpv_textSize
     */
    public static final int CircleProgressView_cpv_textSize=40;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_textTypeface}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name at.grabner.circleprogress.test:cpv_textTypeface
     */
    public static final int CircleProgressView_cpv_textTypeface=41;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_unit}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name at.grabner.circleprogress.test:cpv_unit
     */
    public static final int CircleProgressView_cpv_unit=42;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_unitColor}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_unitColor
     */
    public static final int CircleProgressView_cpv_unitColor=43;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_unitPosition}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>1</td><td></td></tr>
     * <tr><td>left_bottom</td><td>4</td><td></td></tr>
     * <tr><td>left_top</td><td>2</td><td></td></tr>
     * <tr><td>right_bottom</td><td>5</td><td></td></tr>
     * <tr><td>right_top</td><td>3</td><td></td></tr>
     * <tr><td>top</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name at.grabner.circleprogress.test:cpv_unitPosition
     */
    public static final int CircleProgressView_cpv_unitPosition=44;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_unitScale}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_unitScale
     */
    public static final int CircleProgressView_cpv_unitScale=45;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_unitSize}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name at.grabner.circleprogress.test:cpv_unitSize
     */
    public static final int CircleProgressView_cpv_unitSize=46;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_unitToTextScale}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_unitToTextScale
     */
    public static final int CircleProgressView_cpv_unitToTextScale=47;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_unitTypeface}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name at.grabner.circleprogress.test:cpv_unitTypeface
     */
    public static final int CircleProgressView_cpv_unitTypeface=48;
    /**
     * <p>This symbol is the offset where the {@link at.grabner.circleprogress.test.R.attr#cpv_value}
     * attribute's value can be found in the {@link #CircleProgressView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name at.grabner.circleprogress.test:cpv_value
     */
    public static final int CircleProgressView_cpv_value=49;
  }
}